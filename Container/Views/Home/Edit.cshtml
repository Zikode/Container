@model DAL.Models.Containerobj

@{
    ViewData["Title"] = "UpdateContainer";
}

<h1>UpdateContainer</h1>

<h4>Containerobj</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @*<form asp-action="UpdateContainerById">
        
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@item.ContainerID" value="@item.ContainerID"/>
            <div class="form-group">
                <label asp-for="@item.ContainerNumber" class="control-label"></label>
                <input asp-for="@item.ContainerNumber" class="form-control"  value="@item.ContainerNumber"/>
                <span asp-validation-for="@item.ContainerNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@item.Code" class="control-label"></label>
                <input asp-for="@item.Code" class="form-control" value="@item.Code"/>
                <span asp-validation-for="@item.Code" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@item.Color" class="control-label"></label>
                <input asp-for="@item.Color" class="form-control" value="@item.Color"/>
                <span asp-validation-for="@item.Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            }
        </form>*@
        @using (Html.BeginForm()) { 
        <div class="form-horizontal">
            <h4>Container</h4>
            @Html.HiddenFor(model => model.ContainerID)
            <div class="form-group">
                @Html.LabelFor(model => model.ContainerNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContainerNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContainerNumber, "", new { @class = "text-danager" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danager" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danager" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            </div>
        </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
